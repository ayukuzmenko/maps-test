{"version":3,"sources":["components/map/map.js","components/search-bar/search-bar.js","components/point/point.js","components/point-list/point-list.js","components/app.js","models/points.js","store/index.js","index.js"],"names":["Map","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","initMap","_map","window","ymaps","center","zoom","searchControlProvider","handlerDragEnd","event","mark","get","replacePoint","props","newCoords","geometry","getCoordinates","arrIndex","properties","inherits","createClass","key","value","react_default","a","createElement","id","className","ready","geoObjects","removeAll","addPoint","addPolyLine","_this2","points","forEach","point","index","Placemark","coords","iconCaption","adress","draggable","preset","iconCaptionMaxWidth","add","events","linePoints","map","polyline","Polyline","balloonContent","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","Component","connect","state","dispatch","getNewCoords","SearchBar","initSearch","SuggestView","chekPointHandler","preventDefault","_inputAddress","name","type","ref","node","searchPoint","Point","deletePointHandler","deletePoint","item","onClick","PointList","dragEndHandler","result","destination","_this$props","reoderPoints","reorder","source","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","snapshot","assign","innerRef","droppableProps","pointBody","placeholder","draggableId","draggableProps","dragHandleProps","list","startIndex","endIndex","from","_result$splice","splice","removed","slicedToArray","_ref","App","search_bar","point_list","models_points","reducers","payload","addNewPoint","push","newPointId","filter","effects","_searchPoint","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","next","geocode","then","res","geoObj","getAddressLine","Date","now","Math","random","toString","stop","_x","_getNewCoords","_callee2","_context2","_x2","immer","immerPlugin","store","init","models","plugins","ReactDOM","render","es","app","document","getElementById"],"mappings":"gLAIaA,SAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,QAAU,WACRf,EAAKgB,KAAO,IAAIC,OAAOC,MAAMrB,IAC3B,MACA,CACEsB,OAAQ,CAAC,MAAO,OAChBC,KAAM,IAER,CACEC,sBAAuB,mBAT/BrB,EAcEsB,eAAiB,SAAAC,GACf,IAAMC,EAAOD,EAAME,IAAI,UACfC,EAAiB1B,EAAK2B,MAAtBD,aACFE,EAAYJ,EAAKK,SAASC,iBAEhCJ,EAAa,CAAEK,SADEP,EAAKQ,WAAWP,IAAI,YACZG,eAnB7B5B,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAAJ,EAAAC,GAAAG,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,EAAAsC,IAAA,SAAAC,MAAA,WAuBI,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,MAAMC,UAAU,mBAvBnC,CAAAN,IAAA,oBAAAC,MAAA,WA2BInB,OAAOC,MAAMwB,MAAMvC,KAAKY,WA3B5B,CAAAoB,IAAA,qBAAAC,MAAA,WA+BIjC,KAAKa,KAAK2B,WAAWC,YACrBzC,KAAK0C,WACL1C,KAAK2C,gBAjCT,CAAAX,IAAA,WAAAC,MAAA,WAoCa,IAAAW,EAAA5C,KACUA,KAAKwB,MAAhBqB,OAEDC,QAAQ,SAACC,EAAOC,GACrB,IAAM3B,EAAO,IAAIP,OAAOC,MAAMkC,UAC5BF,EAAMG,OACN,CACEC,YAAaJ,EAAMK,OACnBxB,SAAUoB,GAEZ,CACEK,WAAW,EACXC,OAAQ,oCACRC,oBAAqB,QAGzBX,EAAK/B,KAAK2B,WAAWgB,IAAInC,GACzBA,EAAKoC,OAAOD,IAAZ,UAA2BZ,EAAKzB,oBArDtC,CAAAa,IAAA,cAAAC,MAAA,WAyDgB,IACJY,EAAW7C,KAAKwB,MAAhBqB,OAER,KAAIA,EAAO1C,QAAU,GAArB,CAEA,IAAMuD,EAAab,EAAOc,IAAI,SAAAZ,GAAK,OAAIA,EAAMG,SAEvCU,EAAW,IAAI9C,OAAOC,MAAM8C,SAChCH,EACA,CACEI,eAAgB,8CAElB,CACEC,oBAAoB,EACpBC,YAAa,UACbC,YAAa,EACbC,cAAe,KAInBlE,KAAKa,KAAK2B,WAAWgB,IAAII,QA7E7BlE,EAAA,CAAyByE,cA2FVC,cAVO,SAAAC,GACpB,MAAO,CACLxB,OAAQwB,EAAMxB,SAIE,SAAAyB,GAAQ,MAAK,CAC/B/C,aAAc+C,EAASzB,OAAO0B,eAGjBH,CAGb1E,GC9FW8E,SAAb,SAAA7E,GAAA,SAAA6E,IAAA,IAAA5E,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,GAAA,QAAAvE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0E,IAAA/D,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEiE,MAAQ,CACNV,IAAK,MAFT9D,EAKE4E,WAAa,WACK,IAAI3D,OAAOC,MAAM2D,YAAY,WACrCjB,OAAOD,IAAf,SAA6B3D,EAAK8E,mBAPtC9E,EAUE8E,iBAAmB,SAAAvD,GACjBA,EAAMwD,iBACN/E,EAAK2B,MAAMkB,SAAStB,EAAME,IAAI,QAAQW,OACtCpC,EAAKgF,cAAc5C,MAAnB,IAbJpC,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAA0E,EAAA7E,GAAAG,OAAAiC,EAAA,EAAAjC,CAAA0E,EAAA,EAAAxC,IAAA,SAAAC,MAAA,WAgBW,IAAAW,EAAA5C,KACP,OACEkC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,6GACAJ,EAAAC,EAAAC,cAAA,SACE0C,KAAK,UACLC,KAAK,OACL1C,GAAG,UACHC,UAAU,UACV0C,IAAK,SAAAC,GAAI,OAAKrC,EAAKiC,cAAgBI,QAzB7C,CAAAjD,IAAA,oBAAAC,MAAA,WAgCInB,OAAOC,MAAMwB,MAAMvC,KAAKyE,gBAhC5BD,EAAA,CAA+BL,cAwChBC,cACb,KALkB,SAAAE,GAAQ,MAAK,CAC/B5B,SAAU4B,EAASzB,OAAOqC,cAGbd,CAGbI,mBC5CWW,EAAb,SAAAxF,GAAA,SAAAwF,IAAA,IAAAvF,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmF,GAAA,QAAAlF,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAqF,IAAA1E,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEgF,mBAAqB,WACnBvF,EAAK2B,MAAM6D,YAAYxF,EAAK2B,MAAM8D,KAAKjD,KAF3CxC,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAAqF,EAAAxF,GAAAG,OAAAiC,EAAA,EAAAjC,CAAAqF,EAAA,EAAAnD,IAAA,SAAAC,MAAA,WAKW,IACCqD,EAAStF,KAAKwB,MAAd8D,KACR,OACEpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQgD,EAAKlC,QAC7BlB,EAAAC,EAAAC,cAAA,UAAQmD,QAASvF,KAAKoF,oBAAtB,UAVRD,EAAA,CAA2BhB,aAsBZC,cACb,KAPkB,SAAAE,GAClB,MAAO,CACLe,YAAaf,EAASzB,OAAOwC,cAIlBjB,CAGbe,GCvBWK,EAAb,SAAA7F,GAAA,SAAA6F,IAAA,IAAA5F,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GAAA,QAAAvF,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0F,IAAA/E,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEqF,eAAiB,SAAAC,GACf,GAAKA,EAAOC,YAAZ,CADyB,IAAAC,EAKQ/F,EAAK2B,MAA9BqB,EALiB+C,EAKjB/C,QAGRgD,EARyBD,EAKTC,cAESC,EAAQjD,EAAQ6C,EAAOK,OAAO/C,MAAO0C,EAAOC,YAAY3C,UARrFnD,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAA0F,EAAA7F,GAAAG,OAAAiC,EAAA,EAAAjC,CAAA0F,EAAA,EAAAxD,IAAA,SAAAC,MAAA,WA0BW,IAAAW,EAAA5C,KAGP,OAFmBA,KAAKwB,MAAhBqB,OAEI1C,OAKV+B,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAiBC,UAAWjG,KAAKyF,gBAC/BvD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAWE,YAAY,aACpB,SAACC,EAAUC,GAAX,OACClE,EAAAC,EAAAC,cAAA,MAAAtC,OAAAuG,OAAA,CAAKrB,IAAKmB,EAASG,UAAcH,EAASI,gBACvC3D,EAAK4D,UACLL,EAASM,gBATX,OA9Bb,CAAAzE,IAAA,YAAAV,IAAA,WAeI,OAFmBtB,KAAKwB,MAAhBqB,OAEMc,IAAI,SAAC2B,EAAMtC,GAAP,OAChBd,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAWhE,IAAKsD,EAAKjD,GAAIqE,YAAapB,EAAKjD,GAAIW,MAAOA,GACnD,SAACmD,EAAUC,GAAX,OACClE,EAAAC,EAAAC,cAAA,MAAAtC,OAAAuG,OAAA,CAAKrB,IAAKmB,EAASG,UAAcH,EAASQ,eAAoBR,EAASS,iBACrE1E,EAAAC,EAAAC,cAACW,EAAD,CAAOuC,KAAMA,aAnBzBE,EAAA,CAA+BrB,aAgDzB2B,EAAU,SAACe,EAAMC,EAAYC,GACjC,IAAMrB,EAASrF,MAAM2G,KAAKH,GADoBI,EAE5BvB,EAAOwB,OAAOJ,EAAY,GAArCK,EAFuCrH,OAAAsH,EAAA,EAAAtH,CAAAmH,EAAA,MAK9C,OAFAvB,EAAOwB,OAAOH,EAAU,EAAGI,GAEpBzB,GASMtB,cANS,SAAAC,GAAK,MAAK,CAChCxB,OAAQwB,EAAMxB,SAGI,SAAAwE,GAAA,MAAmC,CAAExB,aAArCwB,EAAGxE,OAAUgD,eAElBzB,CAGboB,GCnDa8B,mLAZX,OACEpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAD,eAPQrD,+DCLHsD,EAAA,CACbpD,MAAO,GACPqD,SAAU,CACR7B,aAAc,SAACxB,EAAOsD,GAAR,OAA6BA,GAE3CC,YAAa,SAACvD,EAAOsD,GAMnB,OALAtD,EAAMwD,KAAK,CACTxF,GAAIsF,EAAQG,WACZ5E,OAAQyE,EAAQzE,OAChBE,OAAQuE,EAAQvE,SAEXiB,GAGTgB,YAAa,SAAChB,EAAOsD,GACnB,OAAOtD,EAAM0D,OAAO,SAAAzC,GAAI,OAAIA,EAAKjD,KAAOsF,KAG1CpG,aAAc,SAAC8C,EAAOsD,GACpBtD,EAAMsD,EAAQ/F,UAAY,CACxBS,GAAIgC,EAAMsD,EAAQ/F,UAAUS,GAC5Ba,OAAQyE,EAAQzE,OAChBE,OAAQuE,EAAQvE,UAKtB4E,QAAS,SAAA1D,GAAQ,MAAK,CACdY,YADc,eAAA+C,EAAAnI,OAAAoI,EAAA,EAAApI,CAAAqI,EAAAhG,EAAAd,KAAA,SAAA+G,EACFT,GADE,IAAA9H,EAAAG,KAAA,OAAAmI,EAAAhG,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB1H,OAAOC,MAAM0H,QAAQd,EAAS,CAAEjC,OAAQ,IAAKgD,KAAK,SAAAC,GAChD,IAAMC,EAASD,EAAInG,WAAWlB,IAAI,GAC9BsH,GACF/I,EAAK+H,YAAY,CACfxE,OAAQwF,EAAOC,iBACf3F,OAAQ0F,EAAOlH,SAASC,iBACxBmG,YAAagB,KAAKC,MAAQC,KAAKC,UAAUC,eAR7B,wBAAAZ,EAAAa,SAAAf,EAAApI,SAAA,gBAAAoJ,GAAA,OAAAnB,EAAAvH,MAAAV,KAAAE,YAAA,GAsBdqE,aAtBc,eAAA8E,EAAAvJ,OAAAoI,EAAA,EAAApI,CAAAqI,EAAAhG,EAAAd,KAAA,SAAAiI,EAsBD3B,GAtBC,OAAAQ,EAAAhG,EAAAkG,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAuBlB1H,OAAOC,MAAM0H,QAAQd,EAAQlG,UAAW,CAAEiE,OAAQ,IAAKgD,KAAK,SAAAC,GAC1D,IAAMC,EAASD,EAAInG,WAAWlB,IAAI,GAClC,GAAIqH,EAAK,CACP,IAAMvF,EAASwF,EAAOC,iBAAmBD,EAAOC,iBAAjC,kBACfvE,EAASzB,OAAOtB,aAAa,CAC3B6B,OAAQA,EACRF,OAAQyE,EAAQlG,UAChBG,SAAU+F,EAAQ/F,cA9BN,wBAAA2H,EAAAJ,SAAAG,EAAAtJ,SAAA,gBAAAwJ,GAAA,OAAAH,EAAA3I,MAAAV,KAAAE,YAAA,MCvBlBuJ,EAAQC,MASCC,EAPDC,eAAK,CACjBC,OAAQ,CACNhH,UAEFiH,QAAS,CAACL,KCJZM,IAASC,OACP9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAUN,MAAOA,GACfzH,EAAAC,EAAAC,cAAC8H,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.14cb52c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './style.css';\n\nexport class Map extends Component {\n  initMap = () => {\n    this._map = new window.ymaps.Map(\n      'map',\n      {\n        center: [55.76, 37.64], // Москва\n        zoom: 10,\n      },\n      {\n        searchControlProvider: 'yandex#search',\n      },\n    );\n  };\n\n  handlerDragEnd = event => {\n    const mark = event.get('target');\n    const { replacePoint } = this.props;\n    const newCoords = mark.geometry.getCoordinates();\n    const arrIndex = mark.properties.get('arrIndex');\n    replacePoint({ arrIndex, newCoords });\n  };\n\n  render() {\n    return <div id=\"map\" className=\"containerMap\" />;\n  }\n\n  componentDidMount() {\n    window.ymaps.ready(this.initMap);\n  }\n\n  componentDidUpdate() {\n    this._map.geoObjects.removeAll();\n    this.addPoint();\n    this.addPolyLine();\n  }\n\n  addPoint() {\n    const { points } = this.props;\n\n    points.forEach((point, index) => {\n      const mark = new window.ymaps.Placemark(\n        point.coords,\n        {\n          iconCaption: point.adress,\n          arrIndex: index,\n        },\n        {\n          draggable: true,\n          preset: 'islands#darkBlueDotIconWithCaptio',\n          iconCaptionMaxWidth: '150',\n        },\n      );\n      this._map.geoObjects.add(mark);\n      mark.events.add(`dragend`, this.handlerDragEnd);\n    });\n  }\n\n  addPolyLine() {\n    const { points } = this.props;\n\n    if (points.length <= 1) return;\n\n    const linePoints = points.map(point => point.coords);\n\n    const polyline = new window.ymaps.Polyline(\n      linePoints,\n      {\n        balloonContent: 'Маршрут',\n      },\n      {\n        balloonCloseButton: false,\n        strokeColor: '#000000',\n        strokeWidth: 3,\n        strokeOpacity: 0.5,\n      },\n    );\n\n    this._map.geoObjects.add(polyline);\n  }\n}\n\nconst mapStateProps = state => {\n  return {\n    points: state.points,\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  replacePoint: dispatch.points.getNewCoords,\n});\n\nexport default connect(\n  mapStateProps,\n  mapDispatch,\n)(Map);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './style.css';\n\nexport class SearchBar extends Component {\n  state = {\n    map: null,\n  };\n\n  initSearch = () => {\n    const suggest = new window.ymaps.SuggestView('suggest');\n    suggest.events.add(`select`, this.chekPointHandler);\n  };\n\n  chekPointHandler = event => {\n    event.preventDefault();\n    this.props.addPoint(event.get('item').value);\n    this._inputAddress.value = ``;\n  };\n\n  render() {\n    return (\n      <div>\n        <p className=\"header\">Введите адрес точки:</p>\n        <input\n          name=\"address\"\n          type=\"text\"\n          id=\"suggest\"\n          className=\"suggest\"\n          ref={node => (this._inputAddress = node)}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.ymaps.ready(this.initSearch);\n  }\n}\n\nconst mapDispatch = dispatch => ({\n  addPoint: dispatch.points.searchPoint,\n});\n\nexport default connect(\n  null,\n  mapDispatch,\n)(SearchBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport class Point extends Component {\n  deletePointHandler = () => {\n    this.props.deletePoint(this.props.item.id);\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <div>\n        <span className=\"test\">{item.adress}</span>\n        <button onClick={this.deletePointHandler}>x</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    deletePoint: dispatch.points.deletePoint,\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatch,\n)(Point);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Point from '../point';\n\nexport class PointList extends Component {\n  dragEndHandler = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const { points, reoderPoints } = this.props;\n\n    const newOrderedPoints = reorder(points, result.source.index, result.destination.index);\n    reoderPoints(newOrderedPoints);\n  };\n\n  get pointBody() {\n    const { points } = this.props;\n\n    return points.map((item, index) => (\n      <Draggable key={item.id} draggableId={item.id} index={index}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <Point item={item} />\n          </div>\n        )}\n      </Draggable>\n    ));\n  }\n\n  render() {\n    const { points } = this.props;\n\n    if (!points.length) {\n      return null;\n    }\n\n    return (\n      <DragDropContext onDragEnd={this.dragEndHandler}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {this.pointBody}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst mapStateToProps = state => ({\n  points: state.points,\n});\n\nconst mapDispatch = ({ points: { reoderPoints } }) => ({ reoderPoints });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch,\n)(PointList);\n","import React, { Component } from 'react';\nimport Map from './map';\nimport SearchBar from './search-bar';\nimport PointList from './point-list';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Map />\n        <div className=\"container\">\n          <SearchBar />\n          <PointList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default {\n  state: [],\n  reducers: {\n    reoderPoints: (state, payload) => (state = payload),\n\n    addNewPoint: (state, payload) => {\n      state.push({\n        id: payload.newPointId,\n        coords: payload.coords,\n        adress: payload.adress,\n      });\n      return state;\n    },\n\n    deletePoint: (state, payload) => {\n      return state.filter(item => item.id !== payload);\n    },\n\n    replacePoint: (state, payload) => {\n      state[payload.arrIndex] = {\n        id: state[payload.arrIndex].id,\n        coords: payload.coords,\n        adress: payload.adress,\n      };\n    },\n  },\n\n  effects: dispatch => ({\n    async searchPoint(payload) {\n      window.ymaps.geocode(payload, { result: 1 }).then(res => {\n        const geoObj = res.geoObjects.get(0);\n        if (geoObj) {\n          this.addNewPoint({\n            adress: geoObj.getAddressLine(),\n            coords: geoObj.geometry.getCoordinates(),\n            newPointId: (Date.now() + Math.random()).toString(),\n          });\n        } else {\n          // if result not found\n        }\n      });\n      // .catch(error => {\n      //   dispatch({\n      //     type: NEW_POINT + FAIL,\n      //     error,\n      //   });\n      // });\n    },\n\n    async getNewCoords(payload) {\n      window.ymaps.geocode(payload.newCoords, { result: 1 }).then(res => {\n        const geoObj = res.geoObjects.get(0);\n        if (res) {\n          const adress = geoObj.getAddressLine() ? geoObj.getAddressLine() : `Address unknown`;\n          dispatch.points.replacePoint({\n            adress: adress,\n            coords: payload.newCoords,\n            arrIndex: payload.arrIndex,\n          });\n        } else {\n          // if result not found\n        }\n      });\n    },\n  }),\n};\n","import { init } from '@rematch/core';\nimport immerPlugin from '@rematch/immer';\nimport points from '../models/points';\n\nconst immer = immerPlugin();\n\nconst store = init({\n  models: {\n    points,\n  },\n  plugins: [immer],\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}